// <auto-generated />
using System;
using ExamThree.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamThree.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20190930184306_TwoNew")]
    partial class TwoNew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExamThree.Models.Fan", b =>
                {
                    b.Property<int>("FanId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PasId");

                    b.Property<string>("ProLevel");

                    b.Property<int>("UserId");

                    b.HasKey("FanId");

                    b.HasIndex("PasId");

                    b.HasIndex("UserId");

                    b.ToTable("Fans");
                });

            modelBuilder.Entity("ExamThree.Models.Passion", b =>
                {
                    b.Property<int>("PasId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("PasContent")
                        .IsRequired();

                    b.Property<string>("PasName")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("PasId");

                    b.HasIndex("UserId");

                    b.ToTable("Passions");
                });

            modelBuilder.Entity("ExamThree.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamThree.Models.Fan", b =>
                {
                    b.HasOne("ExamThree.Models.Passion", "Passion")
                        .WithMany("Fans")
                        .HasForeignKey("PasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExamThree.Models.User", "User")
                        .WithMany("Fans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExamThree.Models.Passion", b =>
                {
                    b.HasOne("ExamThree.Models.User", "Creator")
                        .WithMany("CreatedPassions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
